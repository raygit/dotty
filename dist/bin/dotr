#!/usr/bin/env bash

# Try to autodetect real location of the script

if [ -z "$PROG_HOME" ] ; then
  ## resolve links - $0 may be a link to PROG_HOME
  PRG="$0"

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
    else
      PRG="`dirname "$PRG"`/$link"
    fi
  done

  saveddir=`pwd`

  PROG_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  PROG_HOME=`cd "$PROG_HOME" && pwd`

  cd "$saveddir"
fi

source "$PROG_HOME/bin/common"

declare -a residual_args
run_repl=false
with_compiler=false
CLASS_PATH=""

while [[ $# -gt 0 ]]; do
  case "$1" in
    -repl)
      run_repl=true
      shift
      ;;
    -classpath)
      CLASS_PATH="$2"
      shift
      shift
      ;;
    -with-compiler)
      with_compiler=true
      shift
      ;;
    -d)
      DEBUG="$DEBUG_STR"
      shift
      ;;
    *)
      residual_args+=("$1")
      shift
      ;;

  esac
done

if [ $run_repl == true ] || [ ${#residual_args[@]} -eq 0 ]; then
  if [ "$CLASS_PATH" ]; then
    cp_arg="-classpath \"$CLASS_PATH\""
  fi
  echo "Starting dotty REPL..."
  eval "\"$PROG_HOME/bin/dotc\" $cp_arg -repl ${residual_args[@]}"
else
  cp_arg="$DOTTY_LIB$PSEP$SCALA_LIB"
  if [ -z "$CLASS_PATH" ]; then
    cp_arg+="$PSEP."
  else
    cp_arg+="$PSEP$CLASS_PATH"
  fi
  if [ $with_compiler == true ]; then
    cp_arg+="$PSEP$DOTTY_COMP$PSEP$DOTTY_INTF$PSEP$SCALA_ASM"
  fi
  eval exec "\"$JAVACMD\"" "$DEBUG" "-classpath \"$cp_arg\"" "${residual_args[@]}"
fi
